1.Delegeerige endale scott-i rollis olles tabelite

GRANT SELECT ON lepikult.yliopilased TO AABDULLAJEV;
GRANT SELECT ON lepikult.koduylesanded TO AABDULLAJEV;
GRANT SELECT ON lepikult.oppeained TO AABDULLAJEV;

2. Moodustage tabelite lepikult.yliopilased, lepikult.koduylesanded
ja lepikult.oppeained abil kursuse „Oracle….” kohta tabel, kus on...

SELECT result.yliopilase_id AS "ID",
       result.eesnimi       AS "Eesnimi",
       result.perenimi      AS "Perenimi",
       result.ex1           AS "ÜL. 1",
       result.ex2           AS "ÜL. 2",
       result.ex3           AS "ÜL. 3",
       (ex1 + ex2 + ex3)   AS "Kokku",
       CASE
           WHEN (ex1 + ex2 + ex3) > 13
               THEN 'A'
           ELSE 'MA'
           END             AS "Arvestus"
FROM (
         SELECT parent_result.yliopilase_id,
                parent_result.eesnimi,
                parent_result.perenimi,
                sum(ex1) AS ex1,
                sum(ex2) AS ex2,
                sum(ex3) AS ex3
         FROM (
                  SELECT child_result.yliopilase_id,
                         child_result.eesnimi,
                         child_result.perenimi,
                         decode(too_nr, 1, punktid, 0) AS ex1,
                         decode(too_nr, 2, punktid, 0) AS ex2,
                         decode(too_nr, 3, punktid, 0) AS ex3
                  FROM (
                           SELECT k.yliopilase_id,
                                  k.too_nr,
                                  k.punktid,
                                  y.eesnimi,
                                  y.perenimi,
                                  row_number()
                                          OVER (PARTITION BY k.yliopilase_id, k.too_nr ORDER BY k.yliopilase_id, k.too_nr) AS rn
                           FROM scott.koduylesanded k
                                    JOIN scott.yliopilased y ON k.yliopilase_id = y.id
                                    JOIN scott.oppeained o ON k.kursusekood = o.kood
                           WHERE o.nimetus LIKE 'Oracle%'
                       ) child_result
                  WHERE child_result.rn = 1) parent_result
         GROUP BY yliopilase_id, eesnimi, perenimi) result
ORDER BY yliopilase_id;

+--------+-------+--------+-----+-----+-----+-----+--------+
|ID      |Eesnimi|Perenimi|ÜL. 1|ÜL. 2|ÜL. 3|Kokku|Arvestus|
+--------+-------+--------+-----+-----+-----+-----+--------+
|10020011|Katrin |Kask    |8    |7    |0    |15   |A       |
|10020013|Liina  |Vaher   |0    |0    |8    |8    |MA      |
|10020014|Kairi  |M„nd    |10   |0    |0    |10   |MA      |
|10020015|Salme  |Saar    |10   |0    |6    |16   |A       |
+--------+-------+--------+-----+-----+-----+-----+--------+

3. Moodustage kolm tabelit, mis kajastavad raamatukogu andmeid:

CREATE TABLE AAbdullajev.autor
(
    id       NUMBER GENERATED BY DEFAULT AS IDENTITY,
    eesnimi  VARCHAR2(255) NOT NULL,
    perenimi VARCHAR2(255) NOT NULL,
    CONSTRAINT autor_pk PRIMARY KEY (id)
);

CREATE TABLE AAbdullajev.laenutus
(
    id                NUMBER GENERATED BY DEFAULT AS IDENTITY,
    laenutuse_kuupaev DATE    NOT NULL,
    tagastuse_kuupaev DATE    NULL,
    lugeja_id         INTEGER NOT NULL,
    raamat_id         INTEGER NOT NULL,
    CONSTRAINT laenutus_pk PRIMARY KEY (id)
);

CREATE TABLE AAbdullajev.lugeja
(
    id        NUMBER GENERATED BY DEFAULT AS IDENTITY,
    eesnimi   VARCHAR2(255) NOT NULL,
    perenimi  VARCHAR2(255) NOT NULL,
    isikukood NUMBER(11)    NOT NULL,
    aadress   VARCHAR2(150) NOT NULL,
    telefon   NUMBER(15)    NOT NULL,
    email     VARCHAR2(255) NOT NULL,
    CONSTRAINT lugeja_pk PRIMARY KEY (id)
);

CREATE TABLE AAbdullajev.raamat
(
    id               NUMBER GENERATED BY DEFAULT AS IDENTITY,
    shiffer          VARCHAR2(255) NOT NULL,
    pealkiri         VARCHAR2(255) NOT NULL,
    eksemplari_hind  NUMBER(8, 2)  NOT NULL,
    eksemplaride_arv INTEGER       NOT NULL,
    CONSTRAINT raamat_pk PRIMARY KEY (id)
);

CREATE TABLE AAbdullajev.raamatu_autor
(
    id        NUMBER GENERATED BY DEFAULT AS IDENTITY,
    raamat_id INTEGER NOT NULL,
    autor_id  INTEGER NOT NULL,
    CONSTRAINT raamatu_autor_pk PRIMARY KEY (id)
);

ALTER TABLE AAbdullajev.laenutus
    ADD CONSTRAINT laenutus_lugeja
        FOREIGN KEY (lugeja_id)
            REFERENCES lugeja (id);

ALTER TABLE AAbdullajev.laenutus
    ADD CONSTRAINT laenutus_raamat
        FOREIGN KEY (raamat_id)
            REFERENCES raamat (id);

ALTER TABLE AAbdullajev.raamatu_autor
    ADD CONSTRAINT raamatu_autor_autor
        FOREIGN KEY (autor_id)
            REFERENCES autor (id);

ALTER TABLE AAbdullajev.raamatu_autor
    ADD CONSTRAINT raamatu_autor_raamat
        FOREIGN KEY (raamat_id)
            REFERENCES raamat (id);

INSERT INTO AAbdullajev.lugeja (eesnimi, perenimi, isikukood, aadress, telefon, email)
VALUES ('Name 01', 'Surname 01', 36712010011, 'Pae 1', 58300281, 'lugeja1@gmail.com');
INSERT INTO AAbdullajev.lugeja (eesnimi, perenimi, isikukood, aadress, telefon, email)
VALUES ('Name 02', 'Surname 02', 36712010012, 'Pae 2', 58300282, 'lugeja2@gmail.com');
INSERT INTO AAbdullajev.lugeja (eesnimi, perenimi, isikukood, aadress, telefon, email)
VALUES ('Name 03', 'Surname 03', 36712010013, 'Pae 3',58300283, 'lugeja3@gmail.com');
INSERT INTO AAbdullajev.lugeja (eesnimi, perenimi, isikukood, aadress, telefon, email)
VALUES ('Name 04', 'Surname 04', 36712010014, 'Pae 4',58300284, 'lugeja4@gmail.com');
INSERT INTO AAbdullajev.lugeja (eesnimi, perenimi, isikukood, aadress, telefon, email)
VALUES ('Name 05', 'Surname 05', 36712010015, 'Pae 5',58300285, 'lugeja5@gmail.com');

INSERT INTO AAbdullajev.autor (eesnimi, perenimi)
VALUES ('Author 01 Name', 'Author 01 Surname');
INSERT INTO AAbdullajev.autor (eesnimi, perenimi)
VALUES ('Author 02 Name', 'Author 02 Surname');
INSERT INTO AAbdullajev.autor (eesnimi, perenimi)
VALUES ('Author 03 Name', 'Author 03 Surname');
INSERT INTO AAbdullajev.autor (eesnimi, perenimi)
VALUES ('Author 04 Name', 'Author 04 Surname');
INSERT INTO AAbdullajev.autor (eesnimi, perenimi)
VALUES ('Author 05 Name', 'Author 05 Surname');


INSERT INTO AAbdullajev.raamat (shiffer, pealkiri, eksemplari_hind, eksemplaride_arv)
VALUES ('SKU001', 'Title 01', 61.00, 1);
INSERT INTO AAbdullajev.raamat (shiffer, pealkiri, eksemplari_hind, eksemplaride_arv)
VALUES ('SKU002', 'Title 02', 62.00, 2);
INSERT INTO AAbdullajev.raamat (shiffer, pealkiri, eksemplari_hind, eksemplaride_arv)
VALUES ('SKU003', 'Title 03', 63.00, 3);
INSERT INTO AAbdullajev.raamat (shiffer, pealkiri, eksemplari_hind, eksemplaride_arv)
VALUES ('SKU004', 'Title 04', 64.00, 4);
INSERT INTO AAbdullajev.raamat (shiffer, pealkiri, eksemplari_hind, eksemplaride_arv)
VALUES ('SKU005', 'Title 05', 65.00, 5);


INSERT INTO AAbdullajev.raamatu_autor (raamat_id, autor_id)
VALUES (1, 1);
INSERT INTO AAbdullajev.raamatu_autor (raamat_id, autor_id)
VALUES (2, 2);
INSERT INTO AAbdullajev.raamatu_autor (raamat_id, autor_id)
VALUES (3, 3);
INSERT INTO AAbdullajev.raamatu_autor (raamat_id, autor_id)
VALUES (4, 4);
INSERT INTO AAbdullajev.raamatu_autor (raamat_id, autor_id)
VALUES (5, 5);


INSERT INTO AAbdullajev.laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2021-10-02 19:26:23', 'YYYY-MM-DD HH24:MI:SS'),
        TO_DATE('2020-10-14 19:33:25', 'YYYY-MM-DD HH24:MI:SS'), 1, 1);
INSERT INTO AAbdullajev.laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2020-10-02 19:26:23', 'YYYY-MM-DD HH24:MI:SS'),NULL, 2, 2);
INSERT INTO AAbdullajev.laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2020-10-02 19:26:23', 'YYYY-MM-DD HH24:MI:SS'),NULL, 3, 3);
INSERT INTO AAbdullajev.laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2020-10-02 19:26:23', 'YYYY-MM-DD HH24:MI:SS'),
        TO_DATE('2020-10-14 19:33:25', 'YYYY-MM-DD HH24:MI:SS'), 4, 4);
INSERT INTO AAbdullajev.laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2020-10-22 19:26:23', 'YYYY-MM-DD HH24:MI:SS'),
        TO_DATE('2020-10-27 19:33:25', 'YYYY-MM-DD HH24:MI:SS'), 5, 5);


4. Koostage päring, mis leiab „võlglased”. Võlaks loeme..

SELECT lug.eesnimi AS "Võlglase eesnimi", lug.perenimi AS "Võlglase perenimi", ram.pealkiri AS "Raamatu pealkiri"
FROM laenutus
         JOIN lugeja lug ON laenutus.lugeja_id = lug.id
         JOIN raamat ram ON laenutus.raamat_id = ram.id
WHERE laenutuse_kuupaev <= TRUNC(SYSDATE) - 14
  AND tagastuse_kuupaev IS NULL;

+----------------+-----------------+----------------+
|Võlglase eesnimi|Võlglase perenimi|Raamatu pealkiri|
+----------------+-----------------+----------------+
|Name 02         |Surname 02       |Title 02        |
|Name 03         |Surname 03       |Title 03        |
+----------------+-----------------+----------------+


