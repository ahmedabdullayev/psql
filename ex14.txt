Koostage funktsioon, mis kasutab ülesandes 8 loodud raamatukogu
laenutuste andmebaasi. Funktsiooni parameetriks (argumendiks) on
lugeja isikukood ja funktsiooni väärtuseks (return-value) on selle
isikukoodiga lugeja poolt tasumata viiviste summa:
a) viivis on 0, kui lugejal pole võlgu – kõik laenutatud raamatud on
tähtajaks (kahe nädala jooksul) tagastatud;
b) tagastamistähtaja ületanud raamatute puhul arvutatakse viivist 0,5%
raamatu hinnast iga hilinetud päeva kohta


// kasutame ülesandes 8 loodud raamatukogu laenutuste andmebaasi

CREATE TABLE autor
(
    id       NUMBER GENERATED BY DEFAULT AS IDENTITY,
    eesnimi  VARCHAR2(255) NOT NULL,
    perenimi VARCHAR2(255) NOT NULL,
    CONSTRAINT autor_pk PRIMARY KEY (id)
);

CREATE TABLE laenutus
(
    id                NUMBER GENERATED BY DEFAULT AS IDENTITY,
    laenutuse_kuupaev DATE    NOT NULL,
    tagastuse_kuupaev DATE    NULL,
    lugeja_id         INTEGER NOT NULL,
    raamat_id         INTEGER NOT NULL,
    CONSTRAINT laenutus_pk PRIMARY KEY (id)
);

CREATE TABLE lugeja
(
    id        NUMBER GENERATED BY DEFAULT AS IDENTITY,
    eesnimi   VARCHAR2(255) NOT NULL,
    perenimi  VARCHAR2(255) NOT NULL,
    isikukood NUMBER(11)    NOT NULL,
    aadress   VARCHAR2(150) NOT NULL,
    telefon   NUMBER(15)    NOT NULL,
    email     VARCHAR2(255) NOT NULL,
    CONSTRAINT lugeja_pk PRIMARY KEY (id)
);

CREATE TABLE raamat
(
    id               NUMBER GENERATED BY DEFAULT AS IDENTITY,
    shiffer          VARCHAR2(255) NOT NULL,
    pealkiri         VARCHAR2(255) NOT NULL,
    eksemplari_hind  NUMBER(8, 2)  NOT NULL,
    eksemplaride_arv INTEGER       NOT NULL,
    CONSTRAINT raamat_pk PRIMARY KEY (id)
);

CREATE TABLE raamatu_autor
(
    id        NUMBER GENERATED BY DEFAULT AS IDENTITY,
    raamat_id INTEGER NOT NULL,
    autor_id  INTEGER NOT NULL,
    CONSTRAINT raamatu_autor_pk PRIMARY KEY (id)
);

ALTER TABLE laenutus
    ADD CONSTRAINT laenutus_lugeja
        FOREIGN KEY (lugeja_id)
            REFERENCES lugeja (id);

ALTER TABLE laenutus
    ADD CONSTRAINT laenutus_raamat
        FOREIGN KEY (raamat_id)
            REFERENCES raamat (id);

ALTER TABLE raamatu_autor
    ADD CONSTRAINT raamatu_autor_autor
        FOREIGN KEY (autor_id)
            REFERENCES autor (id);

ALTER TABLE raamatu_autor
    ADD CONSTRAINT raamatu_autor_raamat
        FOREIGN KEY (raamat_id)
            REFERENCES raamat (id);


INSERT INTO lugeja (eesnimi, perenimi, isikukood, aadress, telefon, email)
VALUES ('Name 01', 'Surname 01', 36712010011, 'Pae 1', 58300281, 'lugeja1@gmail.com');
INSERT INTO AAbdullajev.lugeja (eesnimi, perenimi, isikukood, aadress, telefon, email)
VALUES ('Name 02', 'Surname 02', 36712010012, 'Pae 2', 58300282, 'lugeja2@gmail.com');
INSERT INTO AAbdullajev.lugeja (eesnimi, perenimi, isikukood, aadress, telefon, email)
VALUES ('Name 03', 'Surname 03', 36712010013, 'Pae 3',58300283, 'lugeja3@gmail.com');

INSERT INTO autor (eesnimi, perenimi)
VALUES ('Author 01 Name', 'Author 01 Surname');
INSERT INTO AAbdullajev.autor (eesnimi, perenimi)
VALUES ('Author 02 Name', 'Author 02 Surname');
INSERT INTO AAbdullajev.autor (eesnimi, perenimi)
VALUES ('Author 03 Name', 'Author 03 Surname');

INSERT INTO raamat (shiffer, pealkiri, eksemplari_hind, eksemplaride_arv)
VALUES ('SKU001', 'Title 01', 61.00, 1);
INSERT INTO AAbdullajev.raamat (shiffer, pealkiri, eksemplari_hind, eksemplaride_arv)
VALUES ('SKU002', 'Title 02', 62.00, 2);
INSERT INTO AAbdullajev.raamat (shiffer, pealkiri, eksemplari_hind, eksemplaride_arv)
VALUES ('SKU003', 'Title 03', 63.00, 3);

INSERT INTO raamatu_autor (raamat_id, autor_id)
VALUES (1, 1);
INSERT INTO raamatu_autor (raamat_id, autor_id)
VALUES (2, 2);
INSERT INTO raamatu_autor (raamat_id, autor_id)
VALUES (3, 3);

INSERT INTO laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2021-10-05 22:35:15', 'YYYY-MM-DD HH24:MI:SS'),
        TO_DATE('2021-10-10 22:39:09', 'YYYY-MM-DD HH24:MI:SS'), 1, 1);
INSERT INTO laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2021-10-05 22:35:15', 'YYYY-MM-DD HH24:MI:SS'),
        TO_DATE('2021-10-10 22:39:09', 'YYYY-MM-DD HH24:MI:SS'), 2, 2);
INSERT INTO laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2021-10-05 22:35:15', 'YYYY-MM-DD HH24:MI:SS'),
        TO_DATE('2021-10-10 22:39:09', 'YYYY-MM-DD HH24:MI:SS'), 3, 3);
INSERT INTO laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2021-10-05 22:35:15', 'YYYY-MM-DD HH24:MI:SS'),
        TO_DATE('2021-10-30 22:39:09', 'YYYY-MM-DD HH24:MI:SS'), 1, 1);
INSERT INTO laenutus (laenutuse_kuupaev, tagastuse_kuupaev, lugeja_id, raamat_id)
VALUES (TO_DATE('2021-10-25 22:35:15', 'YYYY-MM-DD HH24:MI:SS'), NULL, 1, 1);


COMMIT;


// Koostame pakettid
CREATE OR REPLACE PACKAGE viivise_maar IS
    g_viivise_intress NUMBER := 0;
    g_viivis_kokku NUMBER := 0;
    PROCEDURE maara_viivis(v_isikukood IN NUMBER);
END viivise_maar;
/


CREATE OR REPLACE PACKAGE BODY viivise_maar
IS
    FUNCTION arvuta_viivis(v_isikukood IN NUMBER)
        RETURN NUMBER
        IS
        v_count              NUMBER;
        v_eksemplari_hind    NUMBER;
        v_laenutuse_kuupaev  DATE;
        v_tagastuse_kuupaev  DATE;
        cur                  SYS_REFCURSOR;
        v_laenutuse_kestvus  NUMBER;
        v_trahvi_paevad_arv  NUMBER := 0;
        v_trahv_paevas       NUMBER := 0;
        v_trahv_paevade_eest NUMBER := 0;
        v_viivis_kokku        NUMBER := 0;

    BEGIN
        SELECT count(*) INTO v_count FROM lugeja
        WHERE isikukood = v_isikukood;

        IF v_count = 0 THEN
            RAISE_APPLICATION_ERROR(-20000, 'Ei leidnud lugejat isikukoodiga: ' || v_isikukood);
        END IF;
        dbms_output.put_line('debuggimiseks ülevaade muutujatest: ');
        OPEN cur FOR 'SELECT r.eksemplari_hind ,la.laenutuse_kuupaev, la.tagastuse_kuupaev
                            FROM laenutus la
                                     JOIN lugeja lu ON la.lugeja_id = lu.id
                                     JOIN raamat r ON la.raamat_id = r.id
                            WHERE lu.isikukood=:s' USING v_isikukood;
        LOOP
            FETCH cur INTO v_eksemplari_hind, v_laenutuse_kuupaev, v_tagastuse_kuupaev;
            EXIT WHEN cur%NOTFOUND;

            IF v_tagastuse_kuupaev IS NULL THEN
                v_tagastuse_kuupaev := sysdate; 
            END IF;
            v_laenutuse_kestvus := trunc(v_tagastuse_kuupaev) - trunc(v_laenutuse_kuupaev);
            IF v_laenutuse_kestvus > 14 THEN
                v_trahvi_paevad_arv := v_laenutuse_kestvus - 14;
                v_trahv_paevas := v_eksemplari_hind * (g_viivise_intress / 100);
                v_trahv_paevade_eest := v_trahvi_paevad_arv * v_trahv_paevas;
                v_viivis_kokku := v_viivis_kokku + v_trahv_paevade_eest;
            END IF;
        END LOOP;
        CLOSE cur;
        RETURN v_viivis_kokku;
    END arvuta_viivis;
    PROCEDURE maara_viivis(v_isikukood IN NUMBER)
        IS
    BEGIN
        g_viivis_kokku := arvuta_viivis(v_isikukood);
    END maara_viivis;
END viivise_maar;
/



// määrame  intressiks globaalne muutuja
EXECUTE viivise_maar.g_viivise_intress := 10

// testime
SET serveroutput on
EXECUTE viivise_maar.maara_viivis(36712010011);
EXECUTE dbms_output.put_line('Viivis kokku on: '||viivise_maar.g_viivis_kokku);

// Tulemus
Viivis kokku on: 219,6

// testime mitte ülesleitava isikukoodiga
EXECUTE viivise_maar.maara_viivis(232132);

// Tulemus
Error report -
ORA-20000: Ei leidnud lugejat isikukoodiga: 232132